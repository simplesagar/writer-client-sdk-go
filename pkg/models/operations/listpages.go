// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/writerai/writer-client-sdk-go/pkg/models/shared"
	"net/http"
)

// ListPagesStatusEnum
type ListPagesStatusEnum string

const (
	ListPagesStatusEnumLive    ListPagesStatusEnum = "live"
	ListPagesStatusEnumOffline ListPagesStatusEnum = "offline"
)

func (e ListPagesStatusEnum) ToPointer() *ListPagesStatusEnum {
	return &e
}

func (e *ListPagesStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "live":
		fallthrough
	case "offline":
		*e = ListPagesStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPagesStatusEnum: %v", v)
	}
}

type ListPagesRequest struct {
	Limit  *int64               `queryParam:"style=form,explode=true,name=limit"`
	Offset *int64               `queryParam:"style=form,explode=true,name=offset"`
	Status *ListPagesStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type ListPagesResponse struct {
	ContentType string
	// Bad Request
	FailResponse                         *shared.FailResponse
	Headers                              map[string][]string
	PaginatedResultPagePublicAPIResponse *shared.PaginatedResultPagePublicAPIResponse
	StatusCode                           int
	RawResponse                          *http.Response
}
