// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/writerai/writer-client-sdk-go/pkg/utils"
	"time"
)

type ModelFile struct {
	CreatedAt       time.Time `json:"createdAt"`
	Format          string    `json:"format"`
	ID              string    `json:"id"`
	Name            string    `json:"name"`
	NumberOfSamples int64     `json:"numberOfSamples"`
	Size            int64     `json:"size"`
}

func (m ModelFile) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *ModelFile) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ModelFile) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *ModelFile) GetFormat() string {
	if o == nil {
		return ""
	}
	return o.Format
}

func (o *ModelFile) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ModelFile) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ModelFile) GetNumberOfSamples() int64 {
	if o == nil {
		return 0
	}
	return o.NumberOfSamples
}

func (o *ModelFile) GetSize() int64 {
	if o == nil {
		return 0
	}
	return o.Size
}
