// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PagePublicAPIResponseStatus string

const (
	PagePublicAPIResponseStatusLive    PagePublicAPIResponseStatus = "live"
	PagePublicAPIResponseStatusOffline PagePublicAPIResponseStatus = "offline"
)

func (e PagePublicAPIResponseStatus) ToPointer() *PagePublicAPIResponseStatus {
	return &e
}

func (e *PagePublicAPIResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "live":
		fallthrough
	case "offline":
		*e = PagePublicAPIResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PagePublicAPIResponseStatus: %v", v)
	}
}

type PagePublicAPIResponse struct {
	CreatedAt time.Time                   `json:"createdAt"`
	ID        int64                       `json:"id"`
	Order     int64                       `json:"order"`
	Section   *SectionInfo                `json:"section,omitempty"`
	Status    PagePublicAPIResponseStatus `json:"status"`
	Title     string                      `json:"title"`
	UpdatedAt time.Time                   `json:"updatedAt"`
	UpdatedBy *SimpleUser                 `json:"updatedBy,omitempty"`
	URL       string                      `json:"url"`
}
