// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GenerationModelInfoResponseTypeEnum string

const (
	GenerationModelInfoResponseTypeEnumGpt      GenerationModelInfoResponseTypeEnum = "GPT"
	GenerationModelInfoResponseTypeEnumInstruct GenerationModelInfoResponseTypeEnum = "Instruct"
)

func (e GenerationModelInfoResponseTypeEnum) ToPointer() *GenerationModelInfoResponseTypeEnum {
	return &e
}

func (e *GenerationModelInfoResponseTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GPT":
		fallthrough
	case "Instruct":
		*e = GenerationModelInfoResponseTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GenerationModelInfoResponseTypeEnum: %v", v)
	}
}

type GenerationModelInfoResponse struct {
	ID   string                              `json:"id"`
	Name string                              `json:"name"`
	Type GenerationModelInfoResponseTypeEnum `json:"type"`
}
