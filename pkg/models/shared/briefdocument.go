// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/writerai/writer-client-sdk-go/pkg/utils"
	"time"
)

type BriefDocumentAccess string

const (
	BriefDocumentAccessPrivate BriefDocumentAccess = "private"
	BriefDocumentAccessPublic  BriefDocumentAccess = "public"
	BriefDocumentAccessShared  BriefDocumentAccess = "shared"
)

func (e BriefDocumentAccess) ToPointer() *BriefDocumentAccess {
	return &e
}

func (e *BriefDocumentAccess) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private":
		fallthrough
	case "public":
		fallthrough
	case "shared":
		*e = BriefDocumentAccess(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BriefDocumentAccess: %v", v)
	}
}

type BriefDocument struct {
	Access           BriefDocumentAccess `json:"access"`
	CreatedUser      *SimpleUser         `json:"createdUser,omitempty"`
	CreationTime     time.Time           `json:"creationTime"`
	ID               int64               `json:"id"`
	ModificationTime time.Time           `json:"modificationTime"`
	ModifiedUser     *SimpleUser         `json:"modifiedUser,omitempty"`
	OrganizationID   int64               `json:"organizationId"`
	Score            int64               `json:"score"`
	TeamID           int64               `json:"teamId"`
	Title            string              `json:"title"`
}

func (b BriefDocument) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BriefDocument) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BriefDocument) GetAccess() BriefDocumentAccess {
	if o == nil {
		return BriefDocumentAccess("")
	}
	return o.Access
}

func (o *BriefDocument) GetCreatedUser() *SimpleUser {
	if o == nil {
		return nil
	}
	return o.CreatedUser
}

func (o *BriefDocument) GetCreationTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreationTime
}

func (o *BriefDocument) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *BriefDocument) GetModificationTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ModificationTime
}

func (o *BriefDocument) GetModifiedUser() *SimpleUser {
	if o == nil {
		return nil
	}
	return o.ModifiedUser
}

func (o *BriefDocument) GetOrganizationID() int64 {
	if o == nil {
		return 0
	}
	return o.OrganizationID
}

func (o *BriefDocument) GetScore() int64 {
	if o == nil {
		return 0
	}
	return o.Score
}

func (o *BriefDocument) GetTeamID() int64 {
	if o == nil {
		return 0
	}
	return o.TeamID
}

func (o *BriefDocument) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}
