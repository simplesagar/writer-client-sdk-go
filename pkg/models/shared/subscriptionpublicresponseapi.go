// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SubscriptionPublicResponseAPIProductNameEnum string

const (
	SubscriptionPublicResponseAPIProductNameEnumFree       SubscriptionPublicResponseAPIProductNameEnum = "free"
	SubscriptionPublicResponseAPIProductNameEnumPro        SubscriptionPublicResponseAPIProductNameEnum = "pro"
	SubscriptionPublicResponseAPIProductNameEnumTeam       SubscriptionPublicResponseAPIProductNameEnum = "team"
	SubscriptionPublicResponseAPIProductNameEnumEnterprise SubscriptionPublicResponseAPIProductNameEnum = "enterprise"
	SubscriptionPublicResponseAPIProductNameEnumLegacy     SubscriptionPublicResponseAPIProductNameEnum = "legacy"
)

func (e SubscriptionPublicResponseAPIProductNameEnum) ToPointer() *SubscriptionPublicResponseAPIProductNameEnum {
	return &e
}

func (e *SubscriptionPublicResponseAPIProductNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "free":
		fallthrough
	case "pro":
		fallthrough
	case "team":
		fallthrough
	case "enterprise":
		fallthrough
	case "legacy":
		*e = SubscriptionPublicResponseAPIProductNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubscriptionPublicResponseAPIProductNameEnum: %v", v)
	}
}

type SubscriptionPublicResponseAPIStatusEnum string

const (
	SubscriptionPublicResponseAPIStatusEnumTrialing          SubscriptionPublicResponseAPIStatusEnum = "trialing"
	SubscriptionPublicResponseAPIStatusEnumActive            SubscriptionPublicResponseAPIStatusEnum = "active"
	SubscriptionPublicResponseAPIStatusEnumPastDue           SubscriptionPublicResponseAPIStatusEnum = "past_due"
	SubscriptionPublicResponseAPIStatusEnumIncomplete        SubscriptionPublicResponseAPIStatusEnum = "incomplete"
	SubscriptionPublicResponseAPIStatusEnumIncompleteExpired SubscriptionPublicResponseAPIStatusEnum = "incomplete_expired"
	SubscriptionPublicResponseAPIStatusEnumUnpaid            SubscriptionPublicResponseAPIStatusEnum = "unpaid"
	SubscriptionPublicResponseAPIStatusEnumCanceled          SubscriptionPublicResponseAPIStatusEnum = "canceled"
)

func (e SubscriptionPublicResponseAPIStatusEnum) ToPointer() *SubscriptionPublicResponseAPIStatusEnum {
	return &e
}

func (e *SubscriptionPublicResponseAPIStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "trialing":
		fallthrough
	case "active":
		fallthrough
	case "past_due":
		fallthrough
	case "incomplete":
		fallthrough
	case "incomplete_expired":
		fallthrough
	case "unpaid":
		fallthrough
	case "canceled":
		*e = SubscriptionPublicResponseAPIStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubscriptionPublicResponseAPIStatusEnum: %v", v)
	}
}

type SubscriptionPublicResponseAPI struct {
	CreatedAt      time.Time                                    `json:"createdAt"`
	Meta           MetaData                                     `json:"meta"`
	ProductName    SubscriptionPublicResponseAPIProductNameEnum `json:"productName"`
	Seats          int64                                        `json:"seats"`
	Status         SubscriptionPublicResponseAPIStatusEnum      `json:"status"`
	SubscriptionID string                                       `json:"subscriptionId"`
	Usage          Usage                                        `json:"usage"`
}
