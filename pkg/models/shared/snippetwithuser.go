// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/writerai/writer-client-sdk-go/pkg/utils"
	"time"
)

type SnippetWithUser struct {
	CreatedUser      TerminologyUser `json:"createdUser"`
	CreationTime     time.Time       `json:"creationTime"`
	Description      *string         `json:"description,omitempty"`
	ID               string          `json:"id"`
	ModificationTime time.Time       `json:"modificationTime"`
	ModifiedUser     TerminologyUser `json:"modifiedUser"`
	Shortcut         *string         `json:"shortcut,omitempty"`
	Snippet          string          `json:"snippet"`
	Tags             []SnippetTagV2  `json:"tags,omitempty"`
}

func (s SnippetWithUser) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SnippetWithUser) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SnippetWithUser) GetCreatedUser() TerminologyUser {
	if o == nil {
		return TerminologyUser{}
	}
	return o.CreatedUser
}

func (o *SnippetWithUser) GetCreationTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreationTime
}

func (o *SnippetWithUser) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *SnippetWithUser) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *SnippetWithUser) GetModificationTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ModificationTime
}

func (o *SnippetWithUser) GetModifiedUser() TerminologyUser {
	if o == nil {
		return TerminologyUser{}
	}
	return o.ModifiedUser
}

func (o *SnippetWithUser) GetShortcut() *string {
	if o == nil {
		return nil
	}
	return o.Shortcut
}

func (o *SnippetWithUser) GetSnippet() string {
	if o == nil {
		return ""
	}
	return o.Snippet
}

func (o *SnippetWithUser) GetTags() []SnippetTagV2 {
	if o == nil {
		return nil
	}
	return o.Tags
}
