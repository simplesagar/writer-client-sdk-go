// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TermExampleCreateTypeEnum string

const (
	TermExampleCreateTypeEnumGood TermExampleCreateTypeEnum = "good"
	TermExampleCreateTypeEnumBad  TermExampleCreateTypeEnum = "bad"
)

func (e TermExampleCreateTypeEnum) ToPointer() *TermExampleCreateTypeEnum {
	return &e
}

func (e *TermExampleCreateTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "good":
		fallthrough
	case "bad":
		*e = TermExampleCreateTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TermExampleCreateTypeEnum: %v", v)
	}
}

type TermExampleCreate struct {
	Example string                    `json:"example"`
	Type    TermExampleCreateTypeEnum `json:"type"`
}
