// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PageWithSectionResponseStatus string

const (
	PageWithSectionResponseStatusLive    PageWithSectionResponseStatus = "live"
	PageWithSectionResponseStatusOffline PageWithSectionResponseStatus = "offline"
)

func (e PageWithSectionResponseStatus) ToPointer() *PageWithSectionResponseStatus {
	return &e
}

func (e *PageWithSectionResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "live":
		fallthrough
	case "offline":
		*e = PageWithSectionResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PageWithSectionResponseStatus: %v", v)
	}
}

type PageWithSectionResponse struct {
	Content   *string                       `json:"content,omitempty"`
	CreatedAt time.Time                     `json:"createdAt"`
	ID        int64                         `json:"id"`
	Order     int64                         `json:"order"`
	Section   *SectionInfo                  `json:"section,omitempty"`
	Status    PageWithSectionResponseStatus `json:"status"`
	Title     string                        `json:"title"`
	UpdatedAt time.Time                     `json:"updatedAt"`
	UpdatedBy *SimpleUser                   `json:"updatedBy,omitempty"`
	URL       string                        `json:"url"`
}

func (o *PageWithSectionResponse) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *PageWithSectionResponse) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *PageWithSectionResponse) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *PageWithSectionResponse) GetOrder() int64 {
	if o == nil {
		return 0
	}
	return o.Order
}

func (o *PageWithSectionResponse) GetSection() *SectionInfo {
	if o == nil {
		return nil
	}
	return o.Section
}

func (o *PageWithSectionResponse) GetStatus() PageWithSectionResponseStatus {
	if o == nil {
		return PageWithSectionResponseStatus("")
	}
	return o.Status
}

func (o *PageWithSectionResponse) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *PageWithSectionResponse) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *PageWithSectionResponse) GetUpdatedBy() *SimpleUser {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *PageWithSectionResponse) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}
