// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type UserPublicResponseAccountStatus string

const (
	UserPublicResponseAccountStatusInvited  UserPublicResponseAccountStatus = "invited"
	UserPublicResponseAccountStatusSignedUp UserPublicResponseAccountStatus = "signed_up"
)

func (e UserPublicResponseAccountStatus) ToPointer() *UserPublicResponseAccountStatus {
	return &e
}

func (e *UserPublicResponseAccountStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invited":
		fallthrough
	case "signed_up":
		*e = UserPublicResponseAccountStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserPublicResponseAccountStatus: %v", v)
	}
}

type UserPublicResponse struct {
	AccountStatus  UserPublicResponseAccountStatus `json:"accountStatus"`
	Avatar         *string                         `json:"avatar,omitempty"`
	CreatedAt      time.Time                       `json:"createdAt"`
	Email          *string                         `json:"email,omitempty"`
	FirstName      string                          `json:"firstName"`
	FullName       string                          `json:"fullName"`
	ID             int64                           `json:"id"`
	InvitedBy      *int64                          `json:"invitedBy,omitempty"`
	LastName       *string                         `json:"lastName,omitempty"`
	LastSeenOnline *time.Time                      `json:"lastSeenOnline,omitempty"`
	Timezone       *string                         `json:"timezone,omitempty"`
}
